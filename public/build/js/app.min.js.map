{"version":3,"sources":["app.js"],"names":["sectionStep","initialStep","lastStep","startApp","showSection","tabs","paginatorBtns","updatePage","fetchAPI","document","getElementById","addEventListener","e","target","classList","contains","tab","parseInt","dataset","step","updateCurrentTabStyle","previousTab","querySelector","remove","add","previousSection","section","nextPageBtn","previousPageBtn","async","URL","result","fetch","showServices","json","error","console","log","Error","services","serviceContainer","forEach","service","id","name","price","serviceElement","createElement","serviceId","serviceName","textContent","servicePrice","append"],"mappings":"AAAA,IAAAA,YAAA,EACA,MAAAC,YAAA,EACAC,SAAA,EAOA,SAAAC,WAEAC,cAEAC,OAEAC,gBAEAC,aAEAC,UAEA,CAEA,SAAAH,OAEAI,SAAAC,eAAA,QAAAC,iBAAA,SAAA,SAAAC,GAEA,IAAAA,EAAAC,OAAAC,UAAAC,SAAA,OAAA,OAEA,MAAAC,EAAAJ,EAAAC,OAEAb,YAAAiB,SAAAD,EAAAE,QAAAC,KAAA,KAAA,KAEAC,wBAEAhB,cAEAE,eACA,GACA,CAEA,SAAAc,wBAEA,MAAAC,EAAAZ,SAAAa,cAAA,iBAAA,KACAD,GAAAA,EAAAP,UAAAS,OAAA,eAEAd,SAAAa,cAAA,eAAAtB,iBAEAc,UAAAU,IAAA,cACA,CAEA,SAAApB,cAEA,MAAAqB,EAAAhB,SAAAa,cAAA,kBAAA,KACAG,GAAAA,EAAAX,UAAAS,OAAA,QAEA,MAAAG,EAAAjB,SAAAC,eAAA,QAAAV,gBAAA,KACA0B,GAAAA,EAAAZ,UAAAU,IAAA,OACA,CAEA,SAAAlB,gBACA,MAAAqB,EAAAlB,SAAAC,eAAA,QACAkB,EAAAnB,SAAAC,eAAA,YAEA,IAAAV,aACA4B,EAAAd,UAAAU,IAAA,QACAG,EAAAb,UAAAS,OAAA,SACA,IAAAvB,aACA2B,EAAAb,UAAAU,IAAA,QACAI,EAAAd,UAAAS,OAAA,UAEAK,EAAAd,UAAAS,OAAA,QACAI,EAAAb,UAAAS,OAAA,SAEAnB,cACAgB,uBACA,CAEA,SAAAb,aACA,MAAAoB,EAAAlB,SAAAC,eAAA,QACAD,SAAAC,eAAA,YAEAC,iBAAA,SAAA,WACAX,aAlFA,IAmFAA,cACAM,gBACA,IAEAqB,EAAAhB,iBAAA,SAAA,WACAX,aAvFA,IAwFAA,cACAM,gBACA,GACA,CAEAuB,eAAArB,WACA,IACA,MAAAsB,EAAA,qCACAC,QAAAC,MAAAF,GAEAG,mBADAF,EAAAG,OAEA,CAAA,MAAAC,GACAC,QAAAC,IAAA,IAAAC,MAAAH,GACA,CACA,CAEA,SAAAF,aAAAM,GACA,MAAAC,EAAA/B,SAAAC,eAAA,sBAAA,KAEA8B,GAEAD,EAAAE,SAAAC,IACA,MAAAC,GAAAA,EAAAC,KAAAA,EAAAC,MAAAA,GAAAH,EAEAI,EAAArC,SAAAsC,cAAA,OACAD,EAAA5B,QAAA8B,UAAAL,EACAG,EAAAhC,UAAAU,IAAA,WAEA,MAAAyB,EAAAxC,SAAAsC,cAAA,KACAE,EAAAC,YAAAN,EACAK,EAAAnC,UAAAU,IAAA,iBAEA,MAAA2B,EAAA1C,SAAAsC,cAAA,KACAI,EAAAD,YAAAL,EACAM,EAAArC,UAAAU,IAAA,kBAEAsB,EAAAM,OAAAH,EAAAE,GAEAX,EAAAY,OAAAN,EAAA,GAGA,CA/HArC,SAAAE,iBAAA,oBAAA,WACAR,UACA","file":"app.min.js","sourcesContent":["let sectionStep = 1;\r\nconst initialStep = 1;\r\nconst lastStep = 3;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    startApp();\r\n})\r\n\r\n//starts the functionality of the app\r\nfunction startApp() {\r\n    //show the section related to the current tab\r\n    showSection();\r\n    //changes the section when creating an appointment\r\n    tabs();\r\n    //hides or shows paginator buttons depending on the current section step\r\n    paginatorBtns();\r\n    //update page using paginator buttons\r\n    updatePage();\r\n    //fetch services from the api\r\n    fetchAPI();\r\n\r\n}\r\n\r\nfunction tabs() {\r\n    //add listener to the container of the tabs\r\n    document.getElementById(\"tabs\").addEventListener(\"click\", function (e) {\r\n        //return if the target is not a button\r\n        if (!e.target.classList.contains(\"tab\")) return;\r\n        //tab clicked\r\n        const tab = e.target;\r\n        //update sectionStep variable\r\n        sectionStep = parseInt(tab.dataset.step, 10) || null;\r\n        //updateCurrentTabStyle\r\n        updateCurrentTabStyle();\r\n        //show section\r\n        showSection();\r\n        //check buttons\r\n        paginatorBtns();\r\n    });\r\n}\r\n//check current tab dependig on the current step\r\nfunction updateCurrentTabStyle() {\r\n    //delete previus tab style\r\n    const previousTab = document.querySelector(\".tab-current\") || null;\r\n    if (previousTab) previousTab.classList.remove(\"tab-current\");\r\n    //select current tab depending on the step\r\n    const currentTab = document.querySelector(`[data-step=\"${sectionStep}\"]`);\r\n    //add style\r\n    currentTab.classList.add(\"tab-current\");\r\n}\r\n//show the section related to the tab\r\nfunction showSection() {\r\n    //hide the previous section\r\n    const previousSection = document.querySelector(\".section.show\") || null;\r\n    if (previousSection) previousSection.classList.remove(\"show\")\r\n    //show section\r\n    const section = document.getElementById(`step-${sectionStep}`) || null;\r\n    if (section) section.classList.add(\"show\");\r\n}\r\n//\r\nfunction paginatorBtns() {\r\n    const nextPageBtn = document.getElementById(\"next\");\r\n    const previousPageBtn = document.getElementById(\"previous\");\r\n\r\n    if (sectionStep === 1) {\r\n        previousPageBtn.classList.add(\"hide\");\r\n        nextPageBtn.classList.remove(\"hide\");\r\n    } else if (sectionStep === 3) {\r\n        nextPageBtn.classList.add(\"hide\");\r\n        previousPageBtn.classList.remove(\"hide\");\r\n    } else {\r\n        previousPageBtn.classList.remove(\"hide\");\r\n        nextPageBtn.classList.remove(\"hide\");\r\n    }\r\n    showSection();\r\n    updateCurrentTabStyle();\r\n}\r\n//check show next or previous page\r\nfunction updatePage() {\r\n    const nextPageBtn = document.getElementById(\"next\");\r\n    const previousPageBtn = document.getElementById(\"previous\");\r\n    //show previous page\r\n    previousPageBtn.addEventListener(\"click\", function () {\r\n        if (sectionStep <= initialStep) return;\r\n        sectionStep--;\r\n        paginatorBtns();\r\n    })\r\n    //show next page\r\n    nextPageBtn.addEventListener(\"click\", function () {\r\n        if (sectionStep >= lastStep) return;\r\n        sectionStep++;\r\n        paginatorBtns();\r\n    });\r\n}\r\n//fetch services from the api\r\nasync function fetchAPI() {\r\n    try {\r\n        const URL = \"http://localhost:3000/api/services\";\r\n        const result = await fetch(URL);\r\n        const data = await result.json();\r\n        showServices(data);\r\n    } catch (error) {\r\n        console.log(new Error(error));\r\n    }\r\n}\r\n//show services\r\nfunction showServices(services) {\r\n    const serviceContainer = document.getElementById(\"service-container\") || null;\r\n\r\n    if (serviceContainer) {\r\n        //append each service\r\n        services.forEach(service => {\r\n            const { id, name, price } = service;\r\n            //service element\r\n            const serviceElement = document.createElement(\"DIV\");\r\n            serviceElement.dataset.serviceId = id;\r\n            serviceElement.classList.add(\"service\");\r\n            //service name element\r\n            const serviceName = document.createElement(\"P\");\r\n            serviceName.textContent = name;\r\n            serviceName.classList.add(\"service__name\");\r\n            //service price element\r\n            const servicePrice = document.createElement(\"P\");\r\n            servicePrice.textContent = price;\r\n            servicePrice.classList.add(\"service__price\");\r\n            //append details into the service\r\n            serviceElement.append(serviceName, servicePrice);\r\n            //append service into the service container element\r\n            serviceContainer.append(serviceElement)\r\n        })\r\n    }\r\n}"]}