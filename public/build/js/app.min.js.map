{"version":3,"file":"app.min.js","names":["sectionStep","initialStep","lastStep","appointment","id","name","date","hour","services","startApp","showSection","tabs","paginatorBtns","updatePage","fetchAPI","customerInfo","chooseDate","chooseHour","showSummary","previousSection","document","querySelector","classList","remove","section","getElementById","add","addEventListener","e","target","contains","tab","parseInt","dataset","step","updateCurrentTabStyle","nextPageBtn","previousPageBtn","previousTab","async","URL","result","fetch","showServices","json","error","console","log","Error","serviceContainer","forEach","service","price","serviceElement","createElement","serviceId","onclick","pickService","serviceName","textContent","servicePrice","append","some","addedService","updatedServices","filter","value","dateElement","year","month","day","this","split","Date","currentDate","chosenDay","getUTCDay","includes","showAlert","getDate","getMonth","getTime","timeElement","minutes","deleteAlert","element","message","type","selector","permanent","previousAlert","alert","innerText","setTimeout","summary","firstChild","Object","values","length","appointmentServices","serviceHeading","appendChild","serviceText","innerHTML","appointmentInfo","headingAppointment","customerName","formattedDate","formatDate","formattedHour","formatHour","appointmentDate","appointmentHour","bookButton","bookAppointment","region","toLocaleDateString","weekday","h","m","toLocaleTimeString","minute","hour12","map","formData","FormData","set","response","method","body","Swal","fire","title","text","icon","then","window","location","reload","seal"],"sources":["js/app.js"],"mappings":"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","ignoreList":[],"sourcesContent":["//paginator\r\nlet sectionStep = 1;\r\nconst initialStep = 1;\r\nconst lastStep = 3;\r\n//info about an appointment\r\nconst appointment = {\r\n    id: \"\",\r\n    name: \"\",\r\n    date: \"\",\r\n    hour: \"\",\r\n    services: []\r\n}\r\nObject.seal(appointment);// not allowed to created other attributes\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    startApp();\r\n})\r\n\r\n//starts the functionality of the app\r\nfunction startApp() {\r\n    //show the section related to the current tab\r\n    showSection();\r\n    //changes the section when creating an appointment\r\n    tabs();\r\n    //hides or shows paginator buttons depending on the current section step\r\n    paginatorBtns();\r\n    //update page using paginator buttons\r\n    updatePage();\r\n    //fetch services from the api\r\n    fetchAPI();\r\n    //update the appointment's name attribute\r\n    customerInfo();\r\n    //update the appointment's date attribute\r\n    chooseDate();\r\n    //update the appointment's hour attribute\r\n    chooseHour();\r\n    //show summary with the appointment info\r\n    showSummary();\r\n}\r\n//shows the section related to the tab\r\nfunction showSection() {\r\n    //hide the previous section\r\n    const previousSection = document.querySelector(\".section.show\") || null;\r\n    if (previousSection) previousSection.classList.remove(\"show\")\r\n    //show section\r\n    const section = document.getElementById(`step-${sectionStep}`) || null;\r\n    if (section) section.classList.add(\"show\");\r\n}\r\n//changes the section when clicking on a tab\r\nfunction tabs() {\r\n    //add listener to the container of the tabs\r\n    document.getElementById(\"tabs\").addEventListener(\"click\", function (e) {\r\n        //return if the target is not a button\r\n        if (!e.target.classList.contains(\"tab\")) return;\r\n        //tab clicked\r\n        const tab = e.target;\r\n        //update sectionStep variable\r\n        sectionStep = parseInt(tab.dataset.step, 10) || null;\r\n        //updateCurrentTabStyle\r\n        updateCurrentTabStyle();\r\n        //show section\r\n        showSection();\r\n        //check buttons\r\n        paginatorBtns();\r\n    });\r\n}\r\n//hides or shows paginator buttons depending on the current section step\r\nfunction paginatorBtns() {\r\n    const nextPageBtn = document.getElementById(\"next\");\r\n    const previousPageBtn = document.getElementById(\"previous\");\r\n\r\n    if (sectionStep === 1) {\r\n        previousPageBtn.classList.add(\"hide\");\r\n        nextPageBtn.classList.remove(\"hide\");\r\n    } else if (sectionStep === 3) {\r\n        nextPageBtn.classList.add(\"hide\");\r\n        previousPageBtn.classList.remove(\"hide\");\r\n        //show the general summary\r\n        showSummary();\r\n    } else {\r\n        previousPageBtn.classList.remove(\"hide\");\r\n        nextPageBtn.classList.remove(\"hide\");\r\n    }\r\n    showSection();\r\n    updateCurrentTabStyle();\r\n}\r\n//check current tab dependig on the current step\r\nfunction updateCurrentTabStyle() {\r\n    //delete previus tab style\r\n    const previousTab = document.querySelector(\".tab-current\") || null;\r\n    if (previousTab) previousTab.classList.remove(\"tab-current\");\r\n    //select current tab depending on the step\r\n    const currentTab = document.querySelector(`[data-step=\"${sectionStep}\"]`);\r\n    //add style\r\n    currentTab.classList.add(\"tab-current\");\r\n}\r\n//changes the section using the buttons\r\nfunction updatePage() {\r\n    const nextPageBtn = document.getElementById(\"next\");\r\n    const previousPageBtn = document.getElementById(\"previous\");\r\n    //show previous page\r\n    previousPageBtn.addEventListener(\"click\", function () {\r\n        if (sectionStep <= initialStep) return;\r\n        sectionStep--;\r\n        paginatorBtns();\r\n    })\r\n    //show next page\r\n    nextPageBtn.addEventListener(\"click\", function () {\r\n        if (sectionStep >= lastStep) return;\r\n        sectionStep++;\r\n        paginatorBtns();\r\n    });\r\n}\r\n//fetch services from the api\r\nasync function fetchAPI() {\r\n    try {\r\n        const URL = \"http://localhost:3000/api/services\";\r\n        const result = await fetch(URL);\r\n        const data = await result.json();\r\n        showServices(data);\r\n    } catch (error) {\r\n        console.log(new Error(error));\r\n    }\r\n}\r\n//show services\r\nfunction showServices(services) {\r\n    const serviceContainer = document.getElementById(\"service-container\") || null;\r\n\r\n    if (serviceContainer) {\r\n        //append each service\r\n        services.forEach(service => {\r\n            const { id, name, price } = service;\r\n            //service element\r\n            const serviceElement = document.createElement(\"DIV\");\r\n            serviceElement.dataset.serviceId = id;\r\n            serviceElement.classList.add(\"service\");\r\n            //onclick send the service\r\n            serviceElement.onclick = () => { pickService(service) };\r\n            //service name element\r\n            const serviceName = document.createElement(\"P\");\r\n            serviceName.textContent = name;\r\n            serviceName.classList.add(\"service__name\");\r\n            //service price element\r\n            const servicePrice = document.createElement(\"P\");\r\n            servicePrice.textContent = price;\r\n            servicePrice.classList.add(\"service__price\");\r\n            //append details into the service\r\n            serviceElement.append(serviceName, servicePrice);\r\n            //append service into the service container element\r\n            serviceContainer.append(serviceElement)\r\n        })\r\n    }\r\n}\r\n//add a new service\r\nfunction pickService(service) {\r\n    const { services } = appointment;\r\n    const { id } = service;\r\n    //clicked element in the DOM\r\n    const serviceElement = document.querySelector(`[data-service-id='${id}']`) || null;\r\n\r\n    //chekc if the service already exists in the array\r\n    if (services.some(addedService => addedService.id === id)) {\r\n        //delete the service from the array\r\n        const updatedServices = services.filter(addedService => addedService.id !== id);\r\n        appointment.services = updatedServices;\r\n        //delete the style of selected service\r\n        if (serviceElement) serviceElement.classList.remove(\"selected\");\r\n        return;\r\n    }\r\n    //push the new service\r\n    appointment.services = [...services, service];\r\n    //change the styles of the element\r\n    if (serviceElement) serviceElement.classList.add(\"selected\");\r\n}\r\n// add the customer's info to the appointment object\r\nfunction customerInfo() {\r\n    appointment.name = document.getElementById(\"customer-name\").value || \"\";\r\n    appointment.id = document.querySelector(\".user-id\").value || \"\";\r\n}\r\n// add the customer's chosen date to the appointment object\r\nfunction chooseDate() {\r\n    const dateElement = document.getElementById(\"date\") || null;\r\n    if (dateElement) dateElement.addEventListener(\"input\", function () {\r\n        //split element of the date\r\n        const [year, month, day] = this.value.split('-');\r\n        //date to local time\r\n        const date = new Date(year, month - 1, day);\r\n        //current date\r\n        const currentDate = new Date();\r\n\r\n        //check if it's a weekend\r\n        const chosenDay = date.getUTCDay();\r\n        if ([0, 6].includes(chosenDay)) {\r\n            // it's sunday or saturday\r\n            this.value = appointment.date;\r\n            //show alert\r\n            showAlert(\"No hay servicios los fines de semana\", \"error\", \".alerts\");\r\n            return;\r\n        }\r\n        //check if the date is in the past\r\n        if ((date.getDate() <= currentDate.getDate() && date.getMonth <= currentDate.getMonth()) || date.getTime() <= currentDate.getTime()) {\r\n            this.value = appointment.date;\r\n            showAlert(\"Fecha incorrecta\", \"error\", \".alerts\");\r\n            return;\r\n        }\r\n        //save date\r\n        appointment.date = this.value;\r\n\r\n    })\r\n}\r\n// add the customer's chosen hour to the appointment object\r\nfunction chooseHour() {\r\n    const timeElement = document.getElementById(\"time\") || null;\r\n    if (timeElement) timeElement.addEventListener(\"input\", function () {\r\n        const [hour, minutes] = this.value.split(\":\")\r\n        //hour between 8:00am and 6:00pm\r\n        if (hour < '08' || hour > '17' || (hour >= '17' && minutes > '30')) {\r\n            this.value = '';\r\n            showAlert(\"Servicio solo de 8:00am a 5:30pm\", \"error\", \".alerts\");\r\n\r\n        } else {\r\n            //correct hour\r\n            appointment.hour = this.value;\r\n        }\r\n    });\r\n}\r\n//delete an element\r\nfunction deleteAlert(element = null) {\r\n    if (element) element.remove();\r\n}\r\n//shows alerts\r\nfunction showAlert(message = '', type = '', selector = 'body', permanent = false) {\r\n    //check if an alert is already being shown\r\n    const previousAlert = document.querySelector(\".alert\") || null;\r\n    if (previousAlert) deleteAlert(previousAlert);\r\n    //alert element\r\n    const alert = document.createElement(\"div\");\r\n    alert.classList.add(\"alert\", type);\r\n    alert.innerText = message;\r\n    //append below the given element\r\n    const element = document.querySelector(selector) || null;\r\n    if (element) {\r\n        //insert after the element\r\n        element.append(alert);\r\n        //if the alert it's not permanent then hide it after 6s\r\n        if (!permanent) {\r\n            //hide alert (after 6s)\r\n            setTimeout(() => {\r\n                deleteAlert(alert);\r\n            }, 6000)\r\n        }\r\n    }\r\n}\r\n//show a summary of the appointment\r\nfunction showSummary() {\r\n    const summary = document.querySelector(\".summary-content\") || null;\r\n    //clean previous content\r\n    if (summary) while (summary.firstChild) summary.firstChild.remove();\r\n\r\n    //check if the info is correct\r\n    if (Object.values(appointment).includes(\"\") || appointment.services.length === 0) {\r\n        showAlert(\"Faltan datos para la cita\", \"error\", \".summary-content\", true);\r\n        return;\r\n    }\r\n    //show summary\r\n    const { name, date, hour, services } = appointment;\r\n    //service info (container)\r\n    const appointmentServices = document.createElement(\"DIV\");\r\n    appointmentServices.classList.add(\"appointment-services\");\r\n    //heading for service summary\r\n    const serviceHeading = document.createElement(\"H3\");\r\n    serviceHeading.textContent = \"Resumen de servicios\";\r\n    appointmentServices.appendChild(serviceHeading);\r\n\r\n    //iterate and create each service\r\n    services.forEach(service => {\r\n        const { name, price } = service;\r\n        const serviceElement = document.createElement(\"DIV\");\r\n        serviceElement.classList.add(\"service-element\");\r\n\r\n        const serviceText = document.createElement(\"P\");\r\n        serviceText.textContent = name;\r\n\r\n        const servicePrice = document.createElement(\"P\");\r\n        servicePrice.innerHTML = `<span>Precio: </span> $${price}`;\r\n\r\n        serviceElement.append(serviceText, servicePrice);\r\n        appointmentServices.append(serviceElement);\r\n    })\r\n    //appointment and user info\r\n    const appointmentInfo = document.createElement(\"DIV\");\r\n    appointmentInfo.classList.add(\"appointment-info\");\r\n    //heading for service summary\r\n    const headingAppointment = document.createElement(\"H3\");\r\n    headingAppointment.textContent = \"Resumen de la cita\";\r\n    appointmentInfo.appendChild(headingAppointment);\r\n\r\n    const customerName = document.createElement(\"P\");\r\n    customerName.innerHTML = `<span>Nombre:</span> ${name}`;\r\n\r\n    //format date and hour in spanish\r\n    const formattedDate = formatDate(date, \"es-CO\");\r\n    const formattedHour = formatHour(hour, \"es-CO\");\r\n\r\n    const appointmentDate = document.createElement(\"P\");\r\n    appointmentDate.innerHTML = `<span>Fecha:</span> ${formattedDate}`;\r\n\r\n    const appointmentHour = document.createElement(\"P\");\r\n    appointmentHour.innerHTML = `<span>Hora:</span> ${formattedHour}`;\r\n\r\n    appointmentInfo.append(customerName, appointmentDate, appointmentHour);\r\n\r\n    //button to date an appointment\r\n    const bookButton = document.createElement(\"BUTTON\");\r\n    bookButton.classList.add(\"button\", \"submit\");\r\n    bookButton.textContent = \"Reservar Cita\";\r\n    bookButton.addEventListener(\"click\", bookAppointment);\r\n    //append elements\r\n    summary.append(appointmentServices, appointmentInfo, bookButton);\r\n}\r\n//format date to a specific location\r\nfunction formatDate(date, region) {\r\n    try {\r\n        const [year, month, day] = date.split(\"-\");\r\n        const parsedDate = new Date(year, month - 1, day);\r\n        return parsedDate.toLocaleDateString(region, { day: \"numeric\", weekday: \"long\", month: \"long\", year: \"numeric\" });\r\n    } catch (e) {\r\n        return date;\r\n    }\r\n}\r\n//format hour\r\nfunction formatHour(hour, region) {\r\n    try {\r\n        const [h, m] = hour.split(\":\");\r\n        const parsedHour = new Date(0, 0, 0, h, m);\r\n        return parsedHour.toLocaleTimeString(region, { hour: \"numeric\", minute: \"numeric\", hour12: true });\r\n    } catch (e) {\r\n        return hour;\r\n    }\r\n}\r\n//\r\nasync function bookAppointment() {\r\n    const { id, date, name, hour, services } = appointment;\r\n    const serviceId = services.map(service => service.id)\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"date\", date);\r\n    formData.set(\"hour\", hour);\r\n    formData.set(\"userId\", id);\r\n    formData.set(\"services\", serviceId);\r\n\r\n    try {\r\n        //post request to the API\r\n        const URL = \"http://localhost:3000/api/appointments\";\r\n        const response = await fetch(URL, {\r\n            method: \"post\",\r\n            body: formData\r\n        });\r\n        const result = await response.json();\r\n\r\n        if (result.result) {\r\n            Swal.fire({\r\n                title: \"Cita agendada correctamente!\",\r\n                text: \"Gracias por usas nuestros servicios \" + name + \".\",\r\n                icon: \"success\"\r\n            }).then(() => {\r\n                window.location.reload();\r\n            })\r\n        }\r\n    } catch (e) {\r\n        Swal.fire({\r\n            title: \"Error\",\r\n            text: \"Ocurrio un error. Intenta más tarde...\",\r\n            icon: \"error\"\r\n        }).then(() => {\r\n            window.location.reload();\r\n        })\r\n    }\r\n}\r\n"]}