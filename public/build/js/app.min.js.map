{"version":3,"sources":["app.js"],"names":["sectionStep","initialStep","lastStep","appointment","id","name","date","hour","services","startApp","showSection","tabs","paginatorBtns","updatePage","fetchAPI","customerInfo","chooseDate","chooseHour","showSummary","previousSection","document","querySelector","classList","remove","section","getElementById","add","addEventListener","e","target","contains","tab","parseInt","dataset","step","updateCurrentTabStyle","nextPageBtn","previousPageBtn","previousTab","async","URL","result","fetch","showServices","json","error","console","log","Error","serviceContainer","forEach","service","price","serviceElement","createElement","serviceId","onclick","pickService","serviceName","textContent","servicePrice","append","some","addedService","updatedServices","filter","value","dateElement","year","month","day","this","split","Date","currentDate","chosenDay","getUTCDay","includes","showAlert","getDate","getMonth","getTime","timeElement","minutes","deleteAlert","element","message","type","selector","permanent","previousAlert","alert","innerText","setTimeout","summary","firstChild","Object","values","length","appointmentServices","serviceHeading","appendChild","serviceText","innerHTML","appointmentInfo","headingAppointment","customerName","formattedDate","formatDate","formattedHour","formatHour","appointmentDate","appointmentHour","bookButton","bookAppointment","region","toLocaleDateString","weekday","h","m","toLocaleTimeString","minute","hour12","map","formData","FormData","set","response","method","body","Swal","fire","title","text","icon","then","window","location","reload","seal"],"mappings":"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","file":"app.min.js","sourcesContent":["//paginator\r\nlet sectionStep = 1;\r\nconst initialStep = 1;\r\nconst lastStep = 3;\r\n//info about an appointment\r\nconst appointment = {\r\n    id: \"\",\r\n    name: \"\",\r\n    date: \"\",\r\n    hour: \"\",\r\n    services: []\r\n}\r\nObject.seal(appointment);// not allowed to created other attributes\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    startApp();\r\n})\r\n\r\n//starts the functionality of the app\r\nfunction startApp() {\r\n    //show the section related to the current tab\r\n    showSection();\r\n    //changes the section when creating an appointment\r\n    tabs();\r\n    //hides or shows paginator buttons depending on the current section step\r\n    paginatorBtns();\r\n    //update page using paginator buttons\r\n    updatePage();\r\n    //fetch services from the api\r\n    fetchAPI();\r\n    //update the appointment's name attribute\r\n    customerInfo();\r\n    //update the appointment's date attribute\r\n    chooseDate();\r\n    //update the appointment's hour attribute\r\n    chooseHour();\r\n    //show summary with the appointment info\r\n    showSummary();\r\n}\r\n//shows the section related to the tab\r\nfunction showSection() {\r\n    //hide the previous section\r\n    const previousSection = document.querySelector(\".section.show\") || null;\r\n    if (previousSection) previousSection.classList.remove(\"show\")\r\n    //show section\r\n    const section = document.getElementById(`step-${sectionStep}`) || null;\r\n    if (section) section.classList.add(\"show\");\r\n}\r\n//changes the section when clicking on a tab\r\nfunction tabs() {\r\n    //add listener to the container of the tabs\r\n    document.getElementById(\"tabs\").addEventListener(\"click\", function (e) {\r\n        //return if the target is not a button\r\n        if (!e.target.classList.contains(\"tab\")) return;\r\n        //tab clicked\r\n        const tab = e.target;\r\n        //update sectionStep variable\r\n        sectionStep = parseInt(tab.dataset.step, 10) || null;\r\n        //updateCurrentTabStyle\r\n        updateCurrentTabStyle();\r\n        //show section\r\n        showSection();\r\n        //check buttons\r\n        paginatorBtns();\r\n    });\r\n}\r\n//hides or shows paginator buttons depending on the current section step\r\nfunction paginatorBtns() {\r\n    const nextPageBtn = document.getElementById(\"next\");\r\n    const previousPageBtn = document.getElementById(\"previous\");\r\n\r\n    if (sectionStep === 1) {\r\n        previousPageBtn.classList.add(\"hide\");\r\n        nextPageBtn.classList.remove(\"hide\");\r\n    } else if (sectionStep === 3) {\r\n        nextPageBtn.classList.add(\"hide\");\r\n        previousPageBtn.classList.remove(\"hide\");\r\n        //show the general summary\r\n        showSummary();\r\n    } else {\r\n        previousPageBtn.classList.remove(\"hide\");\r\n        nextPageBtn.classList.remove(\"hide\");\r\n    }\r\n    showSection();\r\n    updateCurrentTabStyle();\r\n}\r\n//check current tab dependig on the current step\r\nfunction updateCurrentTabStyle() {\r\n    //delete previus tab style\r\n    const previousTab = document.querySelector(\".tab-current\") || null;\r\n    if (previousTab) previousTab.classList.remove(\"tab-current\");\r\n    //select current tab depending on the step\r\n    const currentTab = document.querySelector(`[data-step=\"${sectionStep}\"]`);\r\n    //add style\r\n    currentTab.classList.add(\"tab-current\");\r\n}\r\n//changes the section using the buttons\r\nfunction updatePage() {\r\n    const nextPageBtn = document.getElementById(\"next\");\r\n    const previousPageBtn = document.getElementById(\"previous\");\r\n    //show previous page\r\n    previousPageBtn.addEventListener(\"click\", function () {\r\n        if (sectionStep <= initialStep) return;\r\n        sectionStep--;\r\n        paginatorBtns();\r\n    })\r\n    //show next page\r\n    nextPageBtn.addEventListener(\"click\", function () {\r\n        if (sectionStep >= lastStep) return;\r\n        sectionStep++;\r\n        paginatorBtns();\r\n    });\r\n}\r\n//fetch services from the api\r\nasync function fetchAPI() {\r\n    try {\r\n        const URL = \"http://localhost:3000/api/services\";\r\n        const result = await fetch(URL);\r\n        const data = await result.json();\r\n        showServices(data);\r\n    } catch (error) {\r\n        console.log(new Error(error));\r\n    }\r\n}\r\n//show services\r\nfunction showServices(services) {\r\n    const serviceContainer = document.getElementById(\"service-container\") || null;\r\n\r\n    if (serviceContainer) {\r\n        //append each service\r\n        services.forEach(service => {\r\n            const { id, name, price } = service;\r\n            //service element\r\n            const serviceElement = document.createElement(\"DIV\");\r\n            serviceElement.dataset.serviceId = id;\r\n            serviceElement.classList.add(\"service\");\r\n            //onclick send the service\r\n            serviceElement.onclick = () => { pickService(service) };\r\n            //service name element\r\n            const serviceName = document.createElement(\"P\");\r\n            serviceName.textContent = name;\r\n            serviceName.classList.add(\"service__name\");\r\n            //service price element\r\n            const servicePrice = document.createElement(\"P\");\r\n            servicePrice.textContent = price;\r\n            servicePrice.classList.add(\"service__price\");\r\n            //append details into the service\r\n            serviceElement.append(serviceName, servicePrice);\r\n            //append service into the service container element\r\n            serviceContainer.append(serviceElement)\r\n        })\r\n    }\r\n}\r\n//add a new service\r\nfunction pickService(service) {\r\n    const { services } = appointment;\r\n    const { id } = service;\r\n    //clicked element in the DOM\r\n    const serviceElement = document.querySelector(`[data-service-id='${id}']`) || null;\r\n\r\n    //chekc if the service already exists in the array\r\n    if (services.some(addedService => addedService.id === id)) {\r\n        //delete the service from the array\r\n        const updatedServices = services.filter(addedService => addedService.id !== id);\r\n        appointment.services = updatedServices;\r\n        //delete the style of selected service\r\n        if (serviceElement) serviceElement.classList.remove(\"selected\");\r\n        return;\r\n    }\r\n    //push the new service\r\n    appointment.services = [...services, service];\r\n    //change the styles of the element\r\n    if (serviceElement) serviceElement.classList.add(\"selected\");\r\n}\r\n// add the customer's info to the appointment object\r\nfunction customerInfo() {\r\n    appointment.name = document.getElementById(\"customer-name\").value || \"\";\r\n    appointment.id = document.querySelector(\".user-id\").value || \"\";\r\n}\r\n// add the customer's chosen date to the appointment object\r\nfunction chooseDate() {\r\n    const dateElement = document.getElementById(\"date\") || null;\r\n    if (dateElement) dateElement.addEventListener(\"input\", function () {\r\n        //split element of the date\r\n        const [year, month, day] = this.value.split('-');\r\n        //date to local time\r\n        const date = new Date(year, month - 1, day);\r\n        //current date\r\n        const currentDate = new Date();\r\n\r\n        //check if it's a weekend\r\n        const chosenDay = date.getUTCDay();\r\n        if ([0, 6].includes(chosenDay)) {\r\n            // it's sunday or saturday\r\n            this.value = appointment.date;\r\n            //show alert\r\n            showAlert(\"No hay servicios los fines de semana\", \"error\", \".alerts\");\r\n            return;\r\n        }\r\n        //check if the date is in the past\r\n        if ((date.getDate() <= currentDate.getDate() && date.getMonth <= currentDate.getMonth()) || date.getTime() <= currentDate.getTime()) {\r\n            this.value = appointment.date;\r\n            showAlert(\"Fecha incorrecta\", \"error\", \".alerts\");\r\n            return;\r\n        }\r\n        //save date\r\n        appointment.date = this.value;\r\n\r\n    })\r\n}\r\n// add the customer's chosen hour to the appointment object\r\nfunction chooseHour() {\r\n    const timeElement = document.getElementById(\"time\") || null;\r\n    if (timeElement) timeElement.addEventListener(\"input\", function () {\r\n        const [hour, minutes] = this.value.split(\":\")\r\n        //hour between 8:00am and 6:00pm\r\n        if (hour < '08' || hour > '17' || (hour >= '17' && minutes > '30')) {\r\n            this.value = '';\r\n            showAlert(\"Servicio solo de 8:00am a 5:30pm\", \"error\", \".alerts\");\r\n\r\n        } else {\r\n            //correct hour\r\n            appointment.hour = this.value;\r\n        }\r\n    });\r\n}\r\n//delete an element\r\nfunction deleteAlert(element = null) {\r\n    if (element) element.remove();\r\n}\r\n//shows alerts\r\nfunction showAlert(message = '', type = '', selector = 'body', permanent = false) {\r\n    //check if an alert is already being shown\r\n    const previousAlert = document.querySelector(\".alert\") || null;\r\n    if (previousAlert) deleteAlert(previousAlert);\r\n    //alert element\r\n    const alert = document.createElement(\"div\");\r\n    alert.classList.add(\"alert\", type);\r\n    alert.innerText = message;\r\n    //append below the given element\r\n    const element = document.querySelector(selector) || null;\r\n    if (element) {\r\n        //insert after the element\r\n        element.append(alert);\r\n        //if the alert it's not permanent then hide it after 6s\r\n        if (!permanent) {\r\n            //hide alert (after 6s)\r\n            setTimeout(() => {\r\n                deleteAlert(alert);\r\n            }, 6000)\r\n        }\r\n    }\r\n}\r\n//show a summary of the appointment\r\nfunction showSummary() {\r\n    const summary = document.querySelector(\".summary-content\") || null;\r\n    //clean previous content\r\n    if (summary) while (summary.firstChild) summary.firstChild.remove();\r\n\r\n    //check if the info is correct\r\n    if (Object.values(appointment).includes(\"\") || appointment.services.length === 0) {\r\n        showAlert(\"Faltan datos para la cita\", \"error\", \".summary-content\", true);\r\n        return;\r\n    }\r\n    //show summary\r\n    const { name, date, hour, services } = appointment;\r\n    //service info (container)\r\n    const appointmentServices = document.createElement(\"DIV\");\r\n    appointmentServices.classList.add(\"appointment-services\");\r\n    //heading for service summary\r\n    const serviceHeading = document.createElement(\"H3\");\r\n    serviceHeading.textContent = \"Resumen de servicios\";\r\n    appointmentServices.appendChild(serviceHeading);\r\n\r\n    //iterate and create each service\r\n    services.forEach(service => {\r\n        const { name, price } = service;\r\n        const serviceElement = document.createElement(\"DIV\");\r\n        serviceElement.classList.add(\"service-element\");\r\n\r\n        const serviceText = document.createElement(\"P\");\r\n        serviceText.textContent = name;\r\n\r\n        const servicePrice = document.createElement(\"P\");\r\n        servicePrice.innerHTML = `<span>Precio: </span> $${price}`;\r\n\r\n        serviceElement.append(serviceText, servicePrice);\r\n        appointmentServices.append(serviceElement);\r\n    })\r\n    //appointment and user info\r\n    const appointmentInfo = document.createElement(\"DIV\");\r\n    appointmentInfo.classList.add(\"appointment-info\");\r\n    //heading for service summary\r\n    const headingAppointment = document.createElement(\"H3\");\r\n    headingAppointment.textContent = \"Resumen de la cita\";\r\n    appointmentInfo.appendChild(headingAppointment);\r\n\r\n    const customerName = document.createElement(\"P\");\r\n    customerName.innerHTML = `<span>Nombre:</span> ${name}`;\r\n\r\n    //format date and hour in spanish\r\n    const formattedDate = formatDate(date, \"es-CO\");\r\n    const formattedHour = formatHour(hour, \"es-CO\");\r\n\r\n    const appointmentDate = document.createElement(\"P\");\r\n    appointmentDate.innerHTML = `<span>Fecha:</span> ${formattedDate}`;\r\n\r\n    const appointmentHour = document.createElement(\"P\");\r\n    appointmentHour.innerHTML = `<span>Hora:</span> ${formattedHour}`;\r\n\r\n    appointmentInfo.append(customerName, appointmentDate, appointmentHour);\r\n\r\n    //button to date an appointment\r\n    const bookButton = document.createElement(\"BUTTON\");\r\n    bookButton.classList.add(\"button\", \"submit\");\r\n    bookButton.textContent = \"Reservar Cita\";\r\n    bookButton.addEventListener(\"click\", bookAppointment);\r\n    //append elements\r\n    summary.append(appointmentServices, appointmentInfo, bookButton);\r\n}\r\n//format date to a specific location\r\nfunction formatDate(date, region) {\r\n    try {\r\n        const [year, month, day] = date.split(\"-\");\r\n        const parsedDate = new Date(year, month - 1, day);\r\n        return parsedDate.toLocaleDateString(region, { day: \"numeric\", weekday: \"long\", month: \"long\", year: \"numeric\" });\r\n    } catch (e) {\r\n        return date;\r\n    }\r\n}\r\n//format hour\r\nfunction formatHour(hour, region) {\r\n    try {\r\n        const [h, m] = hour.split(\":\");\r\n        const parsedHour = new Date(0, 0, 0, h, m);\r\n        return parsedHour.toLocaleTimeString(region, { hour: \"numeric\", minute: \"numeric\", hour12: true });\r\n    } catch (e) {\r\n        return hour;\r\n    }\r\n}\r\n//\r\nasync function bookAppointment() {\r\n    const { id, date, name, hour, services } = appointment;\r\n    const serviceId = services.map(service => service.id)\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"date\", date);\r\n    formData.set(\"hour\", hour);\r\n    formData.set(\"userId\", id);\r\n    formData.set(\"services\", serviceId);\r\n\r\n    try {\r\n        //post request to the API\r\n        const URL = \"http://localhost:3000/api/appointments\";\r\n        const response = await fetch(URL, {\r\n            method: \"post\",\r\n            body: formData\r\n        });\r\n        const result = await response.json();\r\n\r\n        if (result.result) {\r\n            Swal.fire({\r\n                title: \"Cita agendada correctamente!\",\r\n                text: \"Gracias por usas nuestros servicios \" + name + \".\",\r\n                icon: \"success\"\r\n            }).then(() => {\r\n                window.location.reload();\r\n            })\r\n        }\r\n    } catch (e) {\r\n        Swal.fire({\r\n            title: \"Error\",\r\n            text: \"Ocurrio un error. Intenta más tarde...\",\r\n            icon: \"error\"\r\n        }).then(() => {\r\n            window.location.reload();\r\n        })\r\n    }\r\n}\r\n"]}